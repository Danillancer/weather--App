{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","api","useState","query","setQuery","weather","setWeather","className","type","placeholder","onChange","e","target","value","onKeyPress","key","fetch","then","res","json","result","main","name","sys","country","Date","toDateString","Math","round","temp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAyDeA,MArDf,WAEA,IAAMC,EACE,2CADFA,EAEA,mCAGN,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAgBC,EAAhB,KAqBE,OACE,sBAAKC,UAAU,MAAf,UAEI,qBAAKA,UAAU,SAAf,SACA,uBAAOC,KAAK,OAAOD,UAAU,gBAAgBE,YAAY,gBAAgBC,SAAU,SAACC,GAAD,OAAKP,EAASO,EAAEC,OAAOC,QAAQA,MAAOV,EACzHW,WAjBO,SAAAH,GACC,UAAVA,EAAEI,KACJC,MAAM,GAAD,OAAIf,EAAJ,qBAAyBE,EAAzB,+BAAqDF,IACzDgB,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UACfF,MAAK,SAAAG,GACJhB,EAAS,IACTE,EAAWc,WAaO,oBAAff,EAAQgB,KACf,gCACI,sBAAKd,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQiB,KAAnC,KAA2CjB,EAAQkB,IAAIC,WACvD,qBAAKjB,UAAU,OAAf,UAAuB,IAAIkB,MAAOC,oBAGpC,sBAAKnB,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBoB,KAAKC,MAAOvB,EAAQgB,KAAKQ,KAAM,QAAtD,WACA,qBAAKtB,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGgB,aAGjD,OCxCWS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.01b5b456.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\n\n\nfunction App() {\n\nconst api={\n  base: 'https://api.openweathermap.org/data/2.5/',\n  key:'eac01b9fc5f236d892224849fa3a1dd3'\n}\n\nconst [query,setQuery]= useState('')\nconst [weather, setWeather]= useState({})\n\n\n// useEffect(()=>{\n// if(weather.main.temp <= 13){\n// alert('hello')\n// }\n// },[weather])\n\nconst search = e =>{\n  if (e.key === \"Enter\"){\n    fetch(`${api.base}weather?q=${query}&unins=metric&APPID=${api.key}`)\n    .then(res=> res.json())\n    .then(result => {\n      setQuery('')\n      setWeather(result)\n    })\n    \n  }\n}\n\n  return (\n    <div className=\"App\">\n\n        <div className=\"search\">\n        <input type=\"text\" className='search__input' placeholder='Weather in...' onChange={(e)=>setQuery(e.target.value)} value={query}\n        onKeyPress={search}/>\n      </div>\n{(typeof weather.main !='undefined')? (\n  <div>\n      <div className=\"location-box\">\n        <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n        <div className=\"date\">{new Date().toDateString()}</div>\n      </div>\n\n      <div className=\"weather-box\">\n        <div className=\"temp\">{Math.round((weather.main.temp)-273.15)}Â°C</div>\n        <div className=\"weather\">{weather.weather[0].main}</div>\n      </div>\n      </div>\n ):('')}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}